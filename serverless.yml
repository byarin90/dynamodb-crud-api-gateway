# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: template-serverless-typescript
# app and org for use with dashboard.serverless.com
# app: your-app-name
# org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  tracing:
    lambda: true
    apiGateway: true
  environment:
    AUTH0_TENET_DOMAIN: 'https://yarin-bukai.eu.auth0.com/'
    AUTH0_API_IDENTIFIER: 'https://vxztk1yx12.execute-api.eu-central-1.amazonaws.com'

  # you can add statements to the Lambda function's IAM Role here
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - "s3:ListBucket"
  #     Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
  #   - Effect: "Allow"
  #     Action:
  #       - "s3:PutObject"
  #     Resource:
  #       Fn::Join:
  #         - ""
  #         - - "arn:aws:s3:::"
  #           - "Ref" : "ServerlessDeploymentBucket"
  #           - "/*"

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          # Corrected to match the table name indicated in the error message
          Resource: "arn:aws:dynamodb:eu-central-1:168935981053:table/productTable"
          
# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
# package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  healthz:
    handler: src/handlers.healthCheck
    events:
      - httpApi:
          path: /healthz
          method: get
  createProduct:
    handler: src/handlers.createProduct
    events:
      - httpApi:
          path: /product
          method: post
  getProduct:
    handler: src/handlers.getProduct
    events:
      - httpApi:
          path: /product/{id}
          method: get
  updateProduct:
    handler: src/handlers.updateProduct
    events:
      - httpApi:
          path: /product/{id}
          method: put
  deleteProduct:
    handler: src/handlers.deleteProduct
    events:
      - httpApi:
          path: /product/{id}
          method: delete
  getProducts:
    handler: src/handlers.getProducts
    events:
      - httpApi:
          path: /products
          method: get
plugins:
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-plugin-common-excludes

resources:
  Resources:
    ProductsTable: # Consider renaming this to ProductTable to match the table name
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: productTable # Corrected to the actual table name
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE